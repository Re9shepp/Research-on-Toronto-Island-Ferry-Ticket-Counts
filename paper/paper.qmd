---
title: "Research on Toronto Island Ferry Ticket Counts"
subtitle: "Ticketing data in relation to daily time periods"
author: 
  - Mingjin Zhan
thanks: "Code and data are available at: https://github.com/Re9shepp/Research-on-Toronto-Island-Ferry-Ticket-Counts.git"
date: 24 september 2024
date-format: long
abstract: "This paper aims to study the correlation between Toronto Island Ferry Ticket Counts and time, and analyzes the difference in sales volume in different time periods, holidays or working days from sale counts and redemption count. We found that the number of people visiting the island in summer and autumn was much higher than in winter and spring, and weekends and holidays were also higher than weekdays. Finally, we can understand the island time habits of people living in Toronto or visiting Toronto through this study that is People prefer to go to the island at noon during the warmer season. At the same time, suggestions can be made for optimizing ferry schedules"
format: pdf
toc: true
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(lubridate)
library(ggplot2)
library(dplyr)
library(opendatatoronto)
library(knitr)
library(patchwork)
data <- read_csv(here::here("data/analysis_data/analysis_data.csv"))
data$Date <- as.Date(data$Date, format="%Y-%m-%d")
data$Datetime <- as.POSIXct(paste(data$Date, data$Hour), format="%Y-%m-%d %H")
data$Hour <- as.numeric(format(as.POSIXct(data$Hour, format = "%H-%M-%S"), "%H"))

toronto_holidays <- as.Date(c(
  "2023-09-04", # Labour Day
  "2023-10-09", # Thanksgiving Day
  "2023-12-25", # Christmas Day
  "2023-12-26", # Boxing Day
  "2024-01-01", # New Year's Day
  "2024-02-19", # Family Day
  "2024-03-29", # Good Friday
  "2024-05-20", # Victoria Day
  "2024-07-01"  # Canada Day
))
weekends_and_holidays_data <- data %>% filter(wday(Date) %in% c(1,7) | Date %in% toronto_holidays)
weekdays_data <- data %>% filter(!(wday(Date) %in% c(1, 7) | Date %in% toronto_holidays))

```


# Introduction

Toronto Island has always been a popular destination for tourists and local residents, offering a wealth of entertainment and leisure options. The main way to get to the island is by ferry. Although many people use ferry services every day, little research has been done on the relationship between ferry ticket demand and different times of the year and different points of the day. Gaining insight into these trends will not only help optimize ferry schedules, but also enhance the overall travel experience for visitors.

This study focuses on the analysis of ticket sales and redemption for the Toronto Island Ferry, with the aim of revealing how these data fluctuate across seasons, time periods, and between weekdays and weekends/holidays, and drawing conclusions from them to provide actionable optimization recommendations for ferry operations.

The study analysed ferry ticket sales and redemption data between August 2023 and August 2024, looking at how the data changed with the season, weekdays versus weekends, and different times of the day. The results show that ferry demand is highest during the warmer months of summer and autumn, especially on weekends and holidays, with the highest concentration of traffic during the midday hours. In contrast, demand decreased significantly in winter and spring, and there was little difference between weekdays and weekends. Based on these observations, this study further explores people's travel preferences and makes recommendations for optimizing ferry frequencies.

The structure of this paper is as follows: [@sec-data] describes the data and methods used for the analysis, [@sec-discussion] discusses the results and their implications, and finally [@sec-conclusion] gives a brief description of the meaning of the article.


# Data {#sec-data}
This article is based on OpenDataToronto[@rOpenDataToronto] -Toronto Island Ferry Ticket Counts. The original data has four columns of data, _id, Timestamp, Redemption Count and Sales count. Id represent row identifiers, which are not used in the research of this paper. Timestamp indicates the time distribution of the original data, with a line of 15 minutes. Redemption Count Indicates the number of redemptions every 15 minutes. The Sales Count represents the number of sales per 15 minutes. The study will focus on data from August 1, 2023 to August 1, 2024, and will combine the original 15-minute row of data into one hour for the study. Unless otherwise specified below, the unit of time is hour, and the unit of count is 1.The data was cleaned and analyzed using the R programming language [@citeR]. Use the "tidyverse" package [@rTidyverse] for cleaning. Subsequently, the software package "dplyr" [@rDplyr] is used for analysis, the software package "ggplot2" [@rGgplot2] is used for visualization, the software package "patchwork" [@rPatchwork] used for integrating the figure and the software package "lubridata" [@rLubridate] is used for conversion to time format.

## Overview
In the overview, the data used in this article are all time-frame data only, consistent with the study focus from August 1, 2023 to August 1, 2024. The relationship between redemption count and sales count and time during this period will be analyzed, and the general impression of redemption count and data will be obtained for subsequent analysis.

```{r, fig.width=5, fig.height=2}
#| label: fig-fig1
#| fig-cap: redemption counts over time, from August 2023 to August 2024
#| warning: false
#| echo: false
#| message: false

ggplot(data, aes(x=Datetime, y=Redemption_Count)) +
  geom_line(color="blue") +
  labs(title="Redemption Count Over Time", x="Datetime", y="Redemption Count") +
  theme_minimal()

```

This [@fig-fig1] describes the relationship between Redemption counts and time. We can find that this data is stable and high from August to October, 2016, and enters a low period after November. After May of the following year (2024), this data will start to recover to a relatively stable and high value.



```{r, fig.width=5, fig.height=2}
#| label: fig-fig2
#| fig-cap: sales counts over time, from August 2023 to August 2024
#| warning: false
#| echo: false
#| message: false

ggplot(data, aes(x=Datetime, y=Sales_Count)) +
  geom_line(color="red") +
  labs(title="Sales Count Over Time", x="Datetime", y="Sales Count") +
  theme_minimal()

```
```{r, fig.width=7, fig.height=3}
#| label: fig-fig3
#| fig-cap: A comparison of Redemption Counts and Sales Counts against time, from August 2023 to August 2024
#| warning: false
#| echo: false
#| message: false

ggplot(data) +
  geom_line(aes(x=Datetime, y=Redemption_Count, color="Redemption Count")) +
  geom_line(aes(x=Datetime, y=Sales_Count, color="Sales Count")) +
  labs(title="Redemption and Sales Counts Over Time", x="Datetime", y="Count") +
  theme_minimal() +
  scale_color_manual(values=c("Redemption Count"="blue", "Sales Count"="red"))

```

[@fig-fig2] describes the relationship between sales counts and time. If we compare sales counts(blue) and redemption counts(red), as [@fig-fig3], we can find a similar conclusion, that is, sales are higher in summer and autumn, but lower in winter and spring. Given the large time span and low precision of the data studied in these three figures, only one conjecture can be obtained: many tourists visit the island in summer and autumn, while most necessary people, such as work, visit the island in winter and spring.

Next, we will further refine the data and first verify our conclusion that there are more redemption counts and sales counts in summer and autumn, while fewer in winter and spring. Further analysis of the number of weekdays and holidays on the island to verify the conjecture

## count on holidays and weekends compared with count on weekdays{#sec-group}
In the following, the data will be divided into two groups, one group includes holidays and weekends in Toronto, and the other group includes working days. By comparing the differences between the two groups of data, we will verify our conjecture that most people who visit the island in winter will have something to do with their work.

```{r, fig.width=7, fig.height=3}
#| label: fig-fig4
#| fig-cap: Compare the difference in redemption counts between weekdays and holidays, from August 2023 to August 2024
#| warning: false
#| echo: false
#| message: false

ggplot() + 
  geom_line(data = weekdays_data, aes(x=Datetime, y=Redemption_Count, color="Redemption Count for weekdays")) +
  geom_line(data = weekends_and_holidays_data, aes(x=Datetime, y=Redemption_Count, color="Redemption Count for weekends&holidays")) +
  labs(title="Redemption Over Time", x="Datetime", y="Count") +
  theme_minimal() +
  scale_color_manual(values=c("Redemption Count for weekdays"="blue", "Redemption Count for weekends&holidays"="red"))

```

In [@fig-fig4], blue represents the relationship between redemption counts and time on working days, and red represents the relationship between redemption counts and time on weekends and holidays. According to previous findings, redemption counts and sales counts have similar distribution with time, so only redemption counts will be studied. As can be seen from the figure, excluding outliers, most of the redemption counts on weekends and holidays are higher than usual. Since the data is too rough, the data will be refined for further analysis.

```{r}
#| label: tbl-table1
#| tbl-cap: The average redemption counts and sales counts for weekdays, from August 2023 to August 2024, divided into summer autumn and winter spring two groups
#| warning: false
#| echo: false
#| message: false

weekdays_data <- weekdays_data %>%
  filter(Redemption_Count <= 3000 | Sales_Count <= 3000)

summer_and_autumn_weekdays_data <- weekdays_data %>%
  filter((Date >= as.Date("2023-08-01") & Date <= as.Date("2023-10-31")) |
         (Date >= as.Date("2024-05-01") & Date <= as.Date("2024-8-01")))

winter_and_spring_weekdays_data <- weekdays_data %>% 
  filter(!(Date >= as.Date("2023-08-01") & Date <= as.Date("2023-10-31"))&
         !(Date >= as.Date("2024-05-01") & Date <= as.Date("2024-8-01")))

summer_and_autumn_weekdays_avg <- summer_and_autumn_weekdays_data %>% summarise(
  'average redemption counts' = mean(Redemption_Count),
  'average sales counts' = mean(Sales_Count)
) %>% mutate(season = "Weekdays in Summer and Autumn")

winter_and_spring_weekdays_avg <- winter_and_spring_weekdays_data %>% summarise(
  'average redemption counts' = mean(Redemption_Count),
  'average sales counts' = mean(Sales_Count)
) %>% mutate(season = "Weekdays in Winter and Spring")

weekends_and_holidays_data <- weekends_and_holidays_data %>%
  filter(Redemption_Count <= 3000 | Sales_Count <= 3000)

summer_and_autumn_weekends_and_holidays_data <- weekends_and_holidays_data %>%
  filter((Date >= as.Date("2023-08-01") & Date <= as.Date("2023-10-31")) |
         (Date >= as.Date("2024-05-01") & Date <= as.Date("2024-8-01")))

winter_and_spring_weekends_and_holidays_data<- weekends_and_holidays_data %>% 
  filter(!(Date >= as.Date("2023-08-01") & Date <= as.Date("2023-10-31"))&
         !(Date >= as.Date("2024-05-01") & Date <= as.Date("2024-8-01")))

summer_and_autumn_weekends_and_holidays_avg <- summer_and_autumn_weekends_and_holidays_data %>% summarise(
  'average redemption counts' = mean(Redemption_Count),
  'average sales counts' = mean(Sales_Count)
) %>% mutate(season = "Weekends and Holidays in Summer and Autumn")

winter_and_spring_weekends_and_holidays_avg <- winter_and_spring_weekends_and_holidays_data %>% summarise(
  'average redemption counts' = mean(Redemption_Count),
  'average sales counts' = mean(Sales_Count)
) %>% mutate(season = "Weekends and Holidays in Winter and Spring")

avg_data_for_weekdays <- bind_rows(summer_and_autumn_weekdays_avg, 
                                   winter_and_spring_weekdays_avg,
                                   summer_and_autumn_weekends_and_holidays_avg,
                                   winter_and_spring_weekends_and_holidays_avg
                                   )

avg_data_for_weekdays <- avg_data_for_weekdays %>% select(season,everything())

kable(avg_data_for_weekdays)
```
The above data, [@tbl-table1], is the data obtained after the data is divided into working days and rest days and then refined again. The data is divided into winter and spring and summer and fall, and this is because we want to test our hypothesis and remove the outliers, those with a count greater than 3000 per hour. The data in Table1 respectively represent the count of average working hours in summer and autumn, the count of average working hours in winter and spring, the count of average working hours in summer and autumn holidays and weekends, and the count of average working hours in winter and spring holidays and weekends. By comparing these four data, we find that there is a big difference between working days and non-working days in summer and autumn, namely, redemption count is about 238 on working days and 470 on non-working days, and sales count is about 249 on working days and 448 on non-working days. In winter and spring, there is little difference between working days and non-working days, namely, redemption count is about 50 on non-working days and 59 on non-working days, and sales count is about 45 on working days and 55 on non-working days, respectively. To support our suspicion, most of the people who visit the island in winter and spring are people with essential business.

## Every hour of the day
From the above, we can see that people go to the island differently in summer, autumn and winter and spring. The following will continue to discuss this data, and focus on different times of the day to explore people's living habits. In the following, the average redemption count and sales count of each time period throughout the year will be analyzed first, and then the two sets of data in summer, autumn and winter and spring will be compared and analyzed.

```{r, fig.width=7, fig.height=3}
#| label: fig-fig5
#| fig-cap: Annual hourly average of redemption count and sales count
#| echo: false
#| message: false

hourly_avg_data <- data%>% 
  filter(Redemption_Count <= 3000 | Sales_Count <= 3000)

hourly_avg_data <- hourly_avg_data %>%
  group_by(Hour) %>%
  summarise(
    avg_redemption_counts = mean(Redemption_Count),
    avg_sales_counts = mean(Sales_Count)
  )

ggplot(hourly_avg_data, aes(x = Hour)) + 
  geom_line(aes(y = avg_redemption_counts, colour = "Redemption Count")) + 
  geom_line(aes(y = avg_sales_counts, colour = "Sales Count")) +
  labs(title = "Average Redemption and Sales Counts by Hour",
       x = "Hour of Day", y = "Average Count") + 
  scale_x_continuous(breaks = seq(0, 23, 1)) + 
  scale_color_manual(values = c("Redemption Count" = "blue", "Sales Count" = "red")) +
  theme_minimal()

```
From [@fig-fig5], we can see that there is almost no count data after 8 am and 8 PM, and it peaks between 12 noon and 15 PM. A general conclusion can be drawn that most people will choose to go to the island between noon and afternoon, rather than morning or evening.
Next, the data will be divided into winter&spring and summer&autumn with weekdays or weekends, and analyzed again.

```{r, fig.width=12, fig.height=7}
#| label: fig-fig6
#| fig-cap: Average Redemption and Sales Counts by Hour Across Groups
#| echo: false
#| message: false

summer_and_autumn_weekdays_hourly_avg_data <- summer_and_autumn_weekdays_data %>%
  group_by(Hour) %>%
  summarise(
    avg_redemption_counts = mean(Redemption_Count),
    avg_sales_counts = mean(Sales_Count)
  )

p1 <- ggplot(summer_and_autumn_weekdays_hourly_avg_data, aes(x = Hour)) + 
  geom_line(aes(y = avg_redemption_counts, colour = "Redemption Count")) + 
  geom_line(aes(y = avg_sales_counts, colour = "Sales Count")) +
  labs(title = "Summer and Autumn Weekdays",
       x = "Hour of Day", y = "Average Count") + 
  scale_x_continuous(breaks = seq(0, 23, 1)) + 
  scale_color_manual(values = c("Redemption Count" = "blue", "Sales Count" = "red")) +
  theme_minimal()

summer_and_autumn_weekends_holidays_hourly_avg_data <- 
  summer_and_autumn_weekends_and_holidays_data %>%
  group_by(Hour) %>%
  summarise(
    avg_redemption_counts = mean(Redemption_Count),
    avg_sales_counts = mean(Sales_Count)
  )

p2 <- ggplot(summer_and_autumn_weekends_holidays_hourly_avg_data, aes(x = Hour)) + 
  geom_line(aes(y = avg_redemption_counts, colour = "Redemption Count")) + 
  geom_line(aes(y = avg_sales_counts, colour = "Sales Count")) +
  labs(title = "Summer and Autumn Weekends/Holidays",
       x = "Hour of Day", y = "Average Count") + 
  scale_x_continuous(breaks = seq(0, 23, 1)) + 
  scale_color_manual(values = c("Redemption Count" = "blue", "Sales Count" = "red")) +
  theme_minimal()


winter_and_spring_weekdays_hourly_avg_data <- winter_and_spring_weekdays_data %>%
  group_by(Hour) %>%
  summarise(
    avg_redemption_counts = mean(Redemption_Count),
    avg_sales_counts = mean(Sales_Count)
  )

p3 <- ggplot(winter_and_spring_weekdays_hourly_avg_data, aes(x = Hour)) + 
  geom_line(aes(y = avg_redemption_counts, colour = "Redemption Count")) + 
  geom_line(aes(y = avg_sales_counts, colour = "Sales Count")) +
  labs(title = "Winter and Spring Weekdays",
       x = "Hour of Day", y = "Average Count") + 
  scale_x_continuous(breaks = seq(0, 23, 1)) + 
  scale_color_manual(values = c("Redemption Count" = "blue", "Sales Count" = "red")) +
  theme_minimal()

winter_and_spring_weekends_holidays_hourly_avg_data <- 
  winter_and_spring_weekends_and_holidays_data %>%
  group_by(Hour) %>%
  summarise(
    avg_redemption_counts = mean(Redemption_Count),
    avg_sales_counts = mean(Sales_Count)
  )

p4 <- ggplot(winter_and_spring_weekends_holidays_hourly_avg_data, aes(x = Hour)) + 
  geom_line(aes(y = avg_redemption_counts, colour = "Redemption Count")) + 
  geom_line(aes(y = avg_sales_counts, colour = "Sales Count")) +
  labs(title = "Winter and Spring Weekends/Holidays",
       x = "Hour of Day", y = "Average Count") + 
  scale_x_continuous(breaks = seq(0, 23, 1)) + 
  scale_color_manual(values = c("Redemption Count" = "blue", "Sales Count" = "red")) +
  theme_minimal()

combined_plot <- (p1 | p2) / (p3 | p4) +
  plot_annotation(title = "Average Redemption and Sales Counts by Hour Across Groups")
combined_plot
```
Analysis [@fig-fig6], for summer and autumn working days, the peak is reached at 10-12 o 'clock, and the downturn continues from evening to evening. For weekends and holidays in the summer and fall, the peak lasts from 10 to 15, and the peak is even higher. For winter and spring working days, a lower peak is reached at 16pm, and the range of growth and decline is larger. For weekends and holidays in winter and spring, the peak value is also reached at 16:00, which is higher than that of working days in winter and spring, and the change range is equally drastic.
Looking at the annual hourly averages from these four sets of data, only one similar conclusion can be drawn: summer and fall are busier than winter and spring, and weekends and holidays are more in demand than weekdays.


# Discussion{#sec-discussion}

In [@sec-data], we first observed the distribution of data in general, and found that there were more data in summer and autumn than in winter and spring. Then we divided the data into working days and weekend holidays for comparison, and found that there were more weekend holidays than working days. Then we further refined the data and divided the data into four groups, namely summer and autumn working days, summer and autumn weekend holidays, winter and spring working days and winter and spring weekend holidays. Through comparison and analysis of the four groups of data, it is assumed that the proportion of tourists in summer and autumn is relatively high, and most of the people who visit the island in winter and spring have necessary reasons. Then, looking at the data from a different Angle and analyzing the annual average of each hour of the data, we found that the peaks were concentrated in the late morning and early afternoon. Finally, the average hourly data was analyzed again using the four previously sorted data sets. A conclusion similar to [@sec-group] is obtained.
Through the analysis, we can conclude that most of the tourists who choose to visit the island will choose to visit the island when the weather is warmer in summer or autumn, and will choose to go to the island near the end of the morning. In winter and spring, because the climate is colder, the time of people's activities on the island is shifted from noon to afternoon, which can also be shown that the change of season will affect people's activity.
For toronto island crews, more ferries can be scheduled in the summer and fall, and a modest reduction in the winter and spring to balance the budget and traffic pressure. In the specific situation, more shifts can be arranged in the morning in summer and autumn to reduce the queuing pressure of the flow of people, and the shifts can be slowly reduced after the afternoon to balance the budget. In winter and spring, the frequency can be maintained at a relatively low level, and the schedule can be released in advance to avoid too long waiting for people on the island.No matter which season, the ferry frequency can be appropriately increased on better weather days to avoid unnecessary waiting for people on the island.

# Conclusion{#sec-conclusion}

Through the research on redemption count and sales count of Toronto Island ferry in this paper, relevant personnel can understand tourists' travel preferences and help better arrange ferry schedules. For example, tourists like to go to the island in warm times, so increase the ferry frequency in better weather in advance. So that people can avoid unnecessary waiting, better enjoy the time on the island.

\newpage


# References


